import { {{camelCase name}} } from '{{api}}';
import { useQuery, UseQueryResult } from '@tanstack/react-query';

{{#if paramList.length}}
interface {{paramInterfaceName}} {
  {{#each paramList}}
  {{this}}?: {{lookup ../typeList @index}};
  {{/each}}
}
{{/if}}

export function use{{pascalCase name}}({{#if paramList.length}}{ {{#each paramList}}{{this}}{{#unless @last}}, {{/unless}}{{/each}} }: {{paramInterfaceName}}{{/if}}): UseQueryResult{{#if typeName}}<{{typeName}}[], Error>{{else}}<any, Error>{{/if}} {
  return useQuery({
    queryKey: ['key-{{kebabCase name}}', {{#each paramList}}{{this}}{{#unless @last}}, {{/unless}}{{/each}}],
    queryFn: () => {{camelCase name}}({
      {{#each hookParams}}
      {{this.name}},
      {{/each}}
    }),
  });
}
